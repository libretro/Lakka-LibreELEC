diff --git a/configuration.h b/configuration.h
index 3effb395cc..59364a2653 100644
--- a/configuration.h
+++ b/configuration.h
@@ -329,6 +329,7 @@ typedef struct settings
       unsigned cpu_min_freq;
       unsigned cpu_max_freq;
 #endif
+
    } uints;
 
    struct
diff --git a/menu/cbs/menu_cbs_left.c b/menu/cbs/menu_cbs_left.c
index 54a99f97a0..408facf68c 100644
--- a/menu/cbs/menu_cbs_left.c
+++ b/menu/cbs/menu_cbs_left.c
@@ -676,6 +676,7 @@ static int manual_content_scan_core_name_left(unsigned type, const char *label,
    return 0;
 }
 
+#ifndef HAVE_LAKKA_SWITCH
 #ifdef HAVE_LAKKA
 static int cpu_policy_mode_change(unsigned type, const char *label,
       bool wraparound)
@@ -790,6 +791,7 @@ static int cpu_policy_freq_tweak(unsigned type, const char *label,
    return 0;
 }
 #endif
+#endif
 
 static int core_setting_left(unsigned type, const char *label,
       bool wraparound)
diff --git a/retroarch.c b/retroarch.c
index b3040f3299..d9f5a8abb3 100644
--- a/retroarch.c
+++ b/retroarch.c
@@ -11852,16 +11852,20 @@ static void retroarch_pause_checks(struct rarch_state *p_rarch)
       command_event(CMD_EVENT_DISCORD_UPDATE, &userdata);
 #endif
 
+#ifndef HAVE_LAKKA_SWITCH
 #ifdef HAVE_LAKKA
       set_cpu_scaling_signal(CPUSCALING_EVENT_FOCUS_MENU);
+#endif
 #endif
    }
    else
    {
       RARCH_LOG("[Core]: %s\n", msg_hash_to_str(MSG_UNPAUSED));
 
+#ifndef HAVE_LAKKA_SWITCH
 #ifdef HAVE_LAKKA
       set_cpu_scaling_signal(CPUSCALING_EVENT_FOCUS_CORE);
+#endif
 #endif
    }
 
@@ -30493,10 +30497,11 @@ static void drivers_init(struct rarch_state *p_rarch,
    /* Initialize MIDI  driver */
    if (flags & DRIVER_MIDI_MASK)
       midi_driver_init(p_rarch, settings);
-
+#ifndef HAVE_LAKKA_SWITCH
 #ifdef HAVE_LAKKA
    cpu_scaling_driver_init();
 #endif
+#endif
 }
 
 /**
@@ -30589,10 +30594,11 @@ static void driver_uninit(struct rarch_state *p_rarch, int flags)
 
    if (flags & DRIVER_MIDI_MASK)
       midi_driver_free(p_rarch);
-
+#ifndef HAVE_LAKKA_SWITCH
 #ifdef HAVE_LAKKA
    cpu_scaling_driver_free();
 #endif
+#endif
 }
 
 static void retroarch_deinit_drivers(
@@ -32996,9 +33002,11 @@ static void menu_driver_toggle(
 
    if (on) 
    {
+#ifndef HAVE_LAKKA_SWITCH
 #ifdef HAVE_LAKKA
       set_cpu_scaling_signal(CPUSCALING_EVENT_FOCUS_MENU);
 #endif
+#endif
 #ifdef HAVE_OVERLAY
       /* If an overlay was displayed before the toggle
        * and overlays are disabled in menu, need to
@@ -33017,9 +33025,11 @@ static void menu_driver_toggle(
    }
    else
    {
+#ifndef HAVE_LAKKA_SWITCH
 #ifdef HAVE_LAKKA
       set_cpu_scaling_signal(CPUSCALING_EVENT_FOCUS_CORE);
 #endif
+#endif
 #ifdef HAVE_OVERLAY
       /* Inhibits pointer 'select' and 'cancel' actions
        * (until the next time 'select'/'cancel' are released) */

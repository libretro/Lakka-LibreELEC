From f18ed2c4f41d06f1992574e093e7c347f6f081dc Mon Sep 17 00:00:00 2001
From: Ronald Brown <rbrown4014@yahoo.com>
Date: Thu, 12 Jan 2023 20:49:58 -0800
Subject: [PATCH] Lakka:Switch: Add Support for mariko clocks

---
 menu/cbs/menu_cbs_ok.c        | 26 +++++++++++++--
 menu/menu_displaylist.c       | 55 +++++++++++++++++++++++++++---
 switch_performance_profiles.h | 63 +++++++++++++++++++++++++++++++++++
 3 files changed, 136 insertions(+), 8 deletions(-)

diff --git a/menu/cbs/menu_cbs_ok.c b/menu/cbs/menu_cbs_ok.c
index 0e3d97b821..83875d6afa 100644
--- a/menu/cbs/menu_cbs_ok.c
+++ b/menu/cbs/menu_cbs_ok.c
@@ -3857,7 +3857,18 @@ static int action_ok_set_switch_cpu_profile(const char *path,
 {
    char command[PATH_MAX_LENGTH] = {0};
 #ifdef HAVE_LAKKA_SWITCH
-   char* profile_name            = SWITCH_CPU_PROFILES[entry_idx];
+   char* profile_name;
+   char soc[2];
+   FILE *board = NULL;
+   board = popen("cpu-profile board-info", "r");
+   fgets(soc, 2, board);
+   pclose(board);
+
+   if ( soc[0] == 'E' ) {
+     profile_name=SWITCH_CPU_PROFILES[entry_idx];
+   } else if (soc[0] == 'M' ) {
+     profile_name=SWITCH_CPU_PROFILES_MARIKO[entry_idx];
+   }
 
    snprintf(command, sizeof(command), "cpu-profile set '%s'", profile_name);
 
@@ -3895,8 +3906,17 @@ static int action_ok_set_switch_gpu_profile(const char *path,
       const char *label, unsigned type, size_t idx, size_t entry_idx)
 {
    char command[PATH_MAX_LENGTH];
-   char            *profile_name  = SWITCH_GPU_PROFILES[entry_idx];
-
+   char soc[2];
+   FILE *board = NULL;
+   board = popen("gpu-profile board-info", "r");
+   fgets(soc, 2, board);
+   pclose(board);
+   char *profile_name;
+   if (soc[0] == 'M') {
+      profile_name  = SWITCH_GPU_PROFILES_MARIKO[entry_idx];
+   } else if (soc[0] == 'E') {
+      profile_name  = SWITCH_GPU_PROFILES[entry_idx];
+   }
    command[0]                     = '\0';
 
    snprintf(command, sizeof(command),
diff --git a/menu/menu_displaylist.c b/menu/menu_displaylist.c
index e5d9b1acb7..940a60c3c0 100644
--- a/menu/menu_displaylist.c
+++ b/menu/menu_displaylist.c
@@ -11704,8 +11704,20 @@ bool menu_displaylist_ctl(enum menu_displaylist_ctl_state type,
 #ifdef HAVE_LAKKA_SWITCH
          char current_profile[PATH_MAX_LENGTH];
          FILE               *profile = NULL;
-#endif
+         size_t profiles_count = 0;
+         char soc[2];
+         FILE *board = NULL;
+         board = popen("cpu-profile board-info", "r");
+         fgets(soc, 2, board);
+         pclose(board);
+         if ( soc[0] == 'E') {
+           profiles_count = sizeof(SWITCH_CPU_PROFILES)/sizeof(SWITCH_CPU_PROFILES[1]);
+         } else if (soc[0] == 'M') {
+           profiles_count = sizeof(SWITCH_CPU_PROFILES_MARIKO)/sizeof(SWITCH_CPU_PROFILES_MARIKO[1]);
+         }
+#else
          const size_t profiles_count = sizeof(SWITCH_CPU_PROFILES)/sizeof(SWITCH_CPU_PROFILES[1]);
+#endif
 
          runloop_msg_queue_push("Warning : extended overclocking can damage the Switch", 1, 90, true, NULL, MESSAGE_QUEUE_ICON_DEFAULT, MESSAGE_QUEUE_CATEGORY_INFO);
 
@@ -11737,12 +11749,24 @@ bool menu_displaylist_ctl(enum menu_displaylist_ctl_state type,
             0,
             MENU_INFO_MESSAGE, 0, 0, NULL))
             count++;
-
          for (i = 0; i < profiles_count; i++)
          {
             char title[PATH_MAX_LENGTH];
+#ifdef HAVE_LAKKA_SWITCH
+            char* profile;
+            char* speed;
+            if (soc[0] == 'E') {
+              profile               = SWITCH_CPU_PROFILES[i];
+              speed                 = SWITCH_CPU_SPEEDS[i];
+            } else if (soc[0] == 'M') {
+              profile               = SWITCH_CPU_PROFILES_MARIKO[i];
+              speed                 = SWITCH_CPU_SPEEDS_MARIKO[i];
+
+           }
+#else
             char* profile               = SWITCH_CPU_PROFILES[i];
             char* speed                 = SWITCH_CPU_SPEEDS[i];
+#endif
             title[0] = '\0';
 
             snprintf(title, sizeof(title), "%s (%s)", profile, speed);
@@ -11766,8 +11790,20 @@ bool menu_displaylist_ctl(enum menu_displaylist_ctl_state type,
          unsigned i;
          char text[PATH_MAX_LENGTH];
          char current_profile[PATH_MAX_LENGTH];
+         size_t profiles_count = 0;
          FILE               *profile = NULL;
-         const size_t profiles_count = sizeof(SWITCH_GPU_PROFILES)/sizeof(SWITCH_GPU_PROFILES[1]);
+
+         char soc[2];
+         FILE *board = NULL;
+         board = popen("gpu-profile board-info", "r");
+         fgets(soc, 2, board);
+         pclose(board);
+
+         if (soc[0] == 'E') {
+           profiles_count = sizeof(SWITCH_GPU_PROFILES)/sizeof(SWITCH_GPU_PROFILES[1]);
+         } else if (soc[0] == 'M') {
+           profiles_count = sizeof(SWITCH_GPU_PROFILES_MARIKO)/sizeof(SWITCH_GPU_PROFILES_MARIKO[1]);
+         }
 
          runloop_msg_queue_push("Warning : extended overclocking can damage the Switch", 1, 90, true, NULL, MESSAGE_QUEUE_ICON_DEFAULT, MESSAGE_QUEUE_CATEGORY_INFO);
 
@@ -11787,8 +11823,17 @@ bool menu_displaylist_ctl(enum menu_displaylist_ctl_state type,
          for (i = 0; i < profiles_count; i++)
          {
             char title[PATH_MAX_LENGTH];
-            char* profile               = SWITCH_GPU_PROFILES[i];
-            char* speed                 = SWITCH_GPU_SPEEDS[i];
+            char* profile;
+            char* speed;
+            if (soc[0] == 'E') {
+              profile               = SWITCH_GPU_PROFILES[i];
+              speed                 = SWITCH_GPU_SPEEDS[i];
+            } else if (soc[0] == 'M') {
+              profile               = SWITCH_GPU_PROFILES_MARIKO[i];
+              speed                 = SWITCH_GPU_SPEEDS_MARIKO[i];
+
+           }
+
 
             snprintf(title, sizeof(title), "%s (%s)", profile, speed);
 
diff --git a/switch_performance_profiles.h b/switch_performance_profiles.h
index 5d07ba6ed5..ab92b0e114 100644
--- a/switch_performance_profiles.h
+++ b/switch_performance_profiles.h
@@ -48,6 +48,69 @@ static char *SWITCH_GPU_SPEEDS[] = {
     "153 Mhz",
     "76 Mhz"
 };
+
+static char *SWITCH_GPU_PROFILES_MARIKO[] = {
+    "Docked Stock +3",
+    "Docked Stock +2",
+    "Docked Stock +1",
+    "Docked Stock Mode",
+    "Handheld Boost +3",
+    "Handheld Boost +2",
+    "Handheld Boost +1",
+    "Handheld Boost Mode",
+    "Handheld Stock +1",
+    "Handheld Stock Mode",
+    "Powersaving +2",
+    "Powersaving +1",
+    "Powersaving Mode",
+};
+
+static char *SWITCH_GPU_SPEEDS_MARIKO[] = {
+    "998 Mhz",
+    "921 Mhz",
+    "844 Mhz",
+    "768 Mhz",
+    "691 Mhz",
+    "614 Mhz",
+    "537 Mhz",
+    "460 Mhz",
+    "384 Mhz",
+    "307 Mhz",
+    "230 Mhz",
+    "153 Mhz",
+    "76 Mhz"
+};
+
+static char *SWITCH_CPU_PROFILES_MARIKO[] = {
+    "Max Overdrive +3",
+    "Max Overdrive +2",
+    "Max Overdrive +1",
+    "Maximum Performance",
+    "Boost Performance 4",
+    "Boost Performance 3",
+    "Boost Performance 2",
+    "Boost Performance 1",
+    "Stock Performance",
+    "Powersaving Mode 1",
+    "Powersaving Mode 2",
+    "Powersaving Mode 3"
+};
+
+static char *SWITCH_CPU_SPEEDS_MARIKO[] = {
+    " **UNSTABLE**  2295 MHz",
+    " **UNSTABLE**  2193 MHz",
+    " **UNSTABLE**  2091 MHz",
+    "1963 MHz",
+    "1887 MHz",
+    "1785 MHz",
+    "1581 MHz",
+    "1224 MHz",
+    "1020 MHz",
+    "918 MHz",
+    "816 MHz",
+    "714 MHz"
+};
+
 #endif
 
 static char *SWITCH_CPU_PROFILES[] = {
-- 
2.35.1


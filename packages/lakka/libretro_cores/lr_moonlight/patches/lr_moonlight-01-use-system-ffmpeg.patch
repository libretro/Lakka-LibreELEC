diff --git a/Makefile b/Makefile
index 757c3bc..c0e21dd 100755
--- a/Makefile
+++ b/Makefile
@@ -61,10 +61,8 @@ else ifeq ($(platform), lakka-switch)
    DEFINES += -mcpu=cortex-a57+crypto+crc+fp+simd -mabi=lp64 -Wno-psabi -mtune=cortex-a57 \
 	 -march=armv8-a+crypto+crc+fp+simd -fomit-frame-pointer -Wall -pipe -fPIC -pthread \
 	 -D__LAKKA_SWITCH__
-   INCLUDES += -Ithird_party/opus/include -Ithird_party/ffmpeg/include \
-	 -I$(TOOLCHAIN)/aarch64-libreelec-linux-gnueabi/sysroot/usr/include -I$(TOOLCHAIN)/include
-   LIBS += -Lthird_party/opus/lib -Lthird_party/ffmpeg/lib \
-	 -lpthread -lGL -luuid -lvdpau -lX11
+   INCLUDES += -I$(TOOLCHAIN)/aarch64-libreelec-linux-gnueabi/sysroot/usr/include -I$(TOOLCHAIN)/include
+   LIBS += -lpthread -lGL -luuid -lvdpau -lX11
    SHARED := -shared -Wl,--version-script=link.T -Wl,--no-undefined
 else
    CC = gcc
diff --git a/src/ui/LoadingOverlay.cpp b/src/ui/LoadingOverlay.cpp
index 97ffc8e..fb5c5bb 100644
--- a/src/ui/LoadingOverlay.cpp
+++ b/src/ui/LoadingOverlay.cpp
@@ -17,7 +17,13 @@ void LoadingOverlay::draw(NVGcontext *ctx) {
     nvgSave(ctx);
     
     // Draw bg
-    nvgFillColor(ctx, Color(0, 0, 0, 100));
+    NVGcolor bgColor;
+    bgColor.r = 0 / 255.0;
+    bgColor.g = 0 / 255.0;
+    bgColor.b = 0 / 255.0;
+    bgColor.a = 100 / 255.0;
+    nvgFillColor(ctx, bgColor);
+
     nvgBeginPath(ctx);
     nvgRect(ctx, 0, 0, width(), height());
     nvgFill(ctx);
@@ -29,7 +35,13 @@ void LoadingOverlay::draw(NVGcontext *ctx) {
     nvgTranslate(ctx, width() / 2, height() / 2);
     nvgRotate(ctx, r);
     
-    nvgFillColor(ctx, Color(255, 255, 255, 255));
+    NVGcolor spinnerColor;
+    spinnerColor.r = 255 / 255.0;
+    spinnerColor.g = 255 / 255.0;
+    spinnerColor.b = 255 / 255.0;
+    spinnerColor.a = 255 / 255.0;
+    nvgFillColor(ctx, spinnerColor);
+
     nvgFontSize(ctx, 40);
     nvgFontFace(ctx, "icons");
     nvgTextAlign(ctx, NVG_ALIGN_CENTER | NVG_ALIGN_MIDDLE);
diff --git a/src/ui/buttons/AddHostButton.cpp b/src/ui/buttons/AddHostButton.cpp
index 6bc91d3..678e23f 100644
--- a/src/ui/buttons/AddHostButton.cpp
+++ b/src/ui/buttons/AddHostButton.cpp
@@ -18,7 +18,14 @@ void AddHostButton::draw(NVGcontext *ctx) {
     nvgReset(ctx);
     
     nvgTranslate(ctx, absolute_position().x(), absolute_position().y());
-    nvgFillColor(ctx, Color(255, 255, 255, 255));
+
+    NVGcolor fillColor;
+    fillColor.r = 255 / 255.0;
+    fillColor.g = 255 / 255.0;
+    fillColor.b = 255 / 255.0;
+    fillColor.a = 255 / 255.0;
+    nvgFillColor(ctx, fillColor);
+
     nvgFontSize(ctx, 130);
     nvgFontFace(ctx, "icons");
     nvgTextAlign(ctx, NVG_ALIGN_CENTER | NVG_ALIGN_MIDDLE);
diff --git a/src/ui/buttons/AppButton.cpp b/src/ui/buttons/AppButton.cpp
index bde7e7f..4310434 100644
--- a/src/ui/buttons/AppButton.cpp
+++ b/src/ui/buttons/AppButton.cpp
@@ -74,7 +74,14 @@ void AppButton::draw(NVGcontext *ctx) {
     
     if (m_label->visible()) {
         nvgSave(ctx);
-        nvgFillColor(ctx, Color(0, 0, 0, 100));
+
+        NVGcolor fillColor;
+        fillColor.r = 0 / 255.0;
+        fillColor.g = 0 / 255.0;
+        fillColor.b = 0 / 255.0;
+        fillColor.a = 100 / 255.0;
+        nvgFillColor(ctx, fillColor);
+
         nvgBeginPath(ctx);
         nvgRect(ctx, m_pos.x(), m_pos.y(), m_label->width(), m_label->height());
         nvgFill(ctx);
diff --git a/src/ui/buttons/HostButton.cpp b/src/ui/buttons/HostButton.cpp
index 8e2222b..92f2aef 100644
--- a/src/ui/buttons/HostButton.cpp
+++ b/src/ui/buttons/HostButton.cpp
@@ -42,7 +42,14 @@ void HostButton::draw(NVGcontext *ctx) {
     nvgReset(ctx);
     
     nvgTranslate(ctx, absolute_position().x(), absolute_position().y());
-    nvgFillColor(ctx, Color(255, 255, 255, 255));
+
+    NVGcolor fillColor;
+    fillColor.r = 255 / 255.0;
+    fillColor.g = 255 / 255.0;
+    fillColor.b = 255 / 255.0;
+    fillColor.a = 255 / 255.0;
+    nvgFillColor(ctx, fillColor);
+
     nvgFontSize(ctx, 130);
     nvgFontFace(ctx, "icons");
     nvgTextAlign(ctx, NVG_ALIGN_CENTER | NVG_ALIGN_MIDDLE);
diff --git a/src/ui/windows/ContentWindow.cpp b/src/ui/windows/ContentWindow.cpp
index a708250..c6c15b8 100644
--- a/src/ui/windows/ContentWindow.cpp
+++ b/src/ui/windows/ContentWindow.cpp
@@ -32,20 +32,44 @@ void ContentWindow::draw(NVGcontext *ctx) {
     nvgSave(ctx);
     
     // Draw bg
-    nvgFillColor(ctx, Color(48, 48, 48, 255));
+    NVGcolor bgColor;
+    bgColor.r = 48 / 255.0;
+    bgColor.g = 48 / 255.0;
+    bgColor.b = 48 / 255.0;
+    bgColor.a = 255 / 255.0;
+    nvgFillColor(ctx, bgColor);
+
     nvgBeginPath(ctx);
     nvgRect(ctx, 0, 0, width(), height());
     nvgFill(ctx);
     
     // Draw header
-    nvgFillColor(ctx, Color(62, 78, 184, 255));
+    NVGcolor headerColor;
+    headerColor.r = 62 / 255.0;
+    headerColor.g = 78 / 255.0;
+    headerColor.b = 184 / 255.0;
+    headerColor.a = 255 / 255.0;
+    nvgFillColor(ctx, headerColor);
+
     nvgBeginPath(ctx);
     nvgRect(ctx, 0, 0, width(), 80);
     nvgFill(ctx);
     
     // Draw separator
+    NVGcolor greyColor;
+    headerColor.r = 0 / 255.0;
+    headerColor.g = 0 / 255.0;
+    headerColor.b = 0 / 255.0;
+    headerColor.a = 100 / 255.0;
+
+    NVGcolor blackColor;
+    blackColor.r = 0 / 255.0;
+    blackColor.g = 0 / 255.0;
+    blackColor.b = 0 / 255.0;
+    blackColor.a = 0 / 255.0;
+
     nvgBeginPath(ctx);
-    NVGpaint gradient = nvgLinearGradient(ctx, 0, 80, 0, 84, Color(0, 0, 0, 100), Color(0, 0, 0, 0));
+    NVGpaint gradient = nvgLinearGradient(ctx, 0, 80, 0, 84, greyColor, blackColor);
     nvgFillPaint(ctx, gradient);
     nvgRect(ctx, 0, 80, width(), 4);
     nvgFill(ctx);
diff --git a/src/ui/windows/MainWindow.cpp b/src/ui/windows/MainWindow.cpp
index 3bf0a84..3adbaf3 100644
--- a/src/ui/windows/MainWindow.cpp
+++ b/src/ui/windows/MainWindow.cpp
@@ -66,7 +66,13 @@ void MainWindow::draw(NVGcontext *ctx) {
     
     nvgSave(ctx);
     
-    nvgFillColor(ctx, Color(255, 255, 255, 200));
+    NVGcolor bgColor;
+    bgColor.r = 255 / 255.0;
+    bgColor.g = 255 / 255.0;
+    bgColor.b = 255 / 255.0;
+    bgColor.a = 200 / 255.0;
+    nvgFillColor(ctx, bgColor);
+
     nvgFontSize(ctx, 20);
     nvgFontFace(ctx, "sans");
     nvgText(ctx, width() - 40, height() - 8, MOONLIGHT_LIBRETRO_VERSION, NULL);
diff --git a/src/ui/windows/StreamWindow.cpp b/src/ui/windows/StreamWindow.cpp
index 385df3a..90001a8 100644
--- a/src/ui/windows/StreamWindow.cpp
+++ b/src/ui/windows/StreamWindow.cpp
@@ -54,7 +54,13 @@ void StreamWindow::draw(NVGcontext *ctx) {
     nvgRestore(ctx);
     
     if (m_session->connection_status_is_poor()) {
-        nvgFillColor(ctx, Color(255, 255, 255, 200));
+        NVGcolor warnColor;
+        warnColor.r = 255 / 255.0;
+        warnColor.g = 255 / 255.0;
+        warnColor.b = 255 / 255.0;
+        warnColor.a = 200 / 255.0;
+        nvgFillColor(ctx, warnColor);
+        
         nvgFontSize(ctx, 20);
         nvgFontFace(ctx, "icons");
         nvgTextAlign(ctx, NVG_ALIGN_LEFT | NVG_ALIGN_MIDDLE);
@@ -91,7 +97,13 @@ void StreamWindow::draw(NVGcontext *ctx) {
                           (float)stats->video_decode_stats.total_decode_time / stats->video_decode_stats.decoded_frames,
                           (float)stats->video_render_stats.total_render_time / stats->video_render_stats.rendered_frames);
         
-        nvgFillColor(ctx, Color(0, 255, 0, 255));
+        NVGcolor statsColor;
+        statsColor.r = 0 / 255.0;
+        statsColor.g = 255 / 255.0;
+        statsColor.b = 0 / 255.0;
+        statsColor.a = 255 / 255.0;
+        nvgFillColor(ctx, statsColor);
+
         nvgFontFace(ctx, "sans-bold");
         nvgFontSize(ctx, 20);
         nvgTextAlign(ctx, NVG_ALIGN_LEFT | NVG_ALIGN_BOTTOM);


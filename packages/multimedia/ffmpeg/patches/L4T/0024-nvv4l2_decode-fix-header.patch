diff -Naur ffmpeg-6.0/libavcodec/nvv4l2_dec.c ffmpeg-6.0-2/libavcodec/nvv4l2_dec.c
--- ffmpeg-6.0/libavcodec/nvv4l2_dec.c  2023-06-04 21:56:37.526608261 +0200
+++ ffmpeg-6.0-2/libavcodec/nvv4l2_dec.c        2023-06-04 23:04:03.479000528 +0200
@@ -29,6 +29,8 @@
 #include <string.h>
 #include <fcntl.h>
 #include <errno.h>
+#include "decode.h"
+#include "codec_internal.h"
 #include "internal.h"
 #include "libavutil/log.h"
 
@@ -1203,22 +1205,22 @@
 
 #define NVV4L2_DEC(NAME, ID, BSFS)                                                    \
     NVV4L2_DEC_CLASS(NAME)                                                            \
-    AVCodec ff_##NAME##_nvv4l2_decoder = {                                            \
-        .name           = #NAME "_nvv4l2",                                            \
-        .long_name      = NULL_IF_CONFIG_SMALL(#NAME " NVV4L2 HW decoder for Tegra"), \
-        .type           = AVMEDIA_TYPE_VIDEO,                                         \
-        .id             = ID,                                                         \
+    FFCodec ff_##NAME##_nvv4l2_decoder = {                                            \
+        .p.name           = #NAME "_nvv4l2",                                            \
+        CODEC_LONG_NAME(NULL_IF_CONFIG_SMALL(#NAME " NVV4L2 HW decoder for Tegra")), \
+        .p.type           = AVMEDIA_TYPE_VIDEO,                                         \
+        .p.id             = ID,                                                         \
         .priv_data_size = sizeof(nvv4l2DecodeContext),                                \
         .init           = nvv4l2dec_init,                                             \
         .close          = nvv4l2dec_close,                                            \
-        .decode         = nvv4l2dec_decode,                                           \
+        FF_CODEC_DECODE_CB(nvv4l2dec_decode),                                           \
         .flush          = nvv4l2dec_flush,                                            \
-        .priv_class     = &nvv4l2_##NAME##_dec_class,                                 \
-        .capabilities   = AV_CODEC_CAP_DELAY | AV_CODEC_CAP_HARDWARE |                \
+        .p.priv_class     = &nvv4l2_##NAME##_dec_class,                                 \
+        .p.capabilities   = AV_CODEC_CAP_DELAY | AV_CODEC_CAP_HARDWARE |                \
                           AV_CODEC_CAP_AVOID_PROBING,                                 \
         .bsfs           = BSFS,                                                       \
-        .wrapper_name   = "nvv4l2",                                                   \
-        .pix_fmts       =(const enum AVPixelFormat[]){ AV_PIX_FMT_YUV420P,            \
+        .p.wrapper_name   = "nvv4l2",                                                   \
+        .p.pix_fmts       =(const enum AVPixelFormat[]){ AV_PIX_FMT_YUV420P,            \
                                                        AV_PIX_FMT_NV12,               \
                                                        AV_PIX_FMT_NONE },             \
     };
diff -Naur ffmpeg-6.0/libavcodec/nvv4l2_enc.c ffmpeg-6.0-2/libavcodec/nvv4l2_enc.c
--- ffmpeg-6.0/libavcodec/nvv4l2_enc.c  2023-06-04 21:56:41.758684320 +0200
+++ ffmpeg-6.0-2/libavcodec/nvv4l2_enc.c        2023-06-04 23:48:47.734896973 +0200
@@ -28,6 +28,8 @@
 #include <string.h>
 #include <fcntl.h>
 #include <errno.h>
+#include "encode.h"
+#include "codec_internal.h"
 #include "internal.h"
 #include "libavutil/imgutils.h"
 #include "libavutil/log.h"
@@ -1265,7 +1267,7 @@
     if (nvv4l2_encoder_get_packet(avctx, ctx, &packet))
         return 0;
 
-    ff_alloc_packet2(avctx, pkt, packet.payload_size, packet.payload_size);
+    ff_alloc_packet(avctx, pkt, packet.payload_size);
 
     memcpy(pkt->data, packet.payload, packet.payload_size);
     pkt->dts = pkt->pts = packet.pts;
@@ -1286,7 +1288,7 @@
     return 0;
 }
 
-static const AVCodecDefault defaults[] = {
+static const FFCodecDefault defaults[] = {
     { "b",     "5M" },
     { "qmin",  "-1" },
     { "qmax",  "-1" },
@@ -1455,20 +1457,20 @@
 
 #define NVV4L2_ENC(NAME, ID)                                                          \
     NVV4L2_ENC_CLASS(NAME)                                                            \
-    AVCodec ff_##NAME##_nvv4l2_encoder = {                                            \
-        .name           = #NAME "_nvv4l2" ,                                           \
-        .long_name      = NULL_IF_CONFIG_SMALL(#NAME " NVV4L2 HW encoder for Tegra"), \
-        .type           = AVMEDIA_TYPE_VIDEO,                                         \
-        .id             = ID,                                                         \
+    FFCodec ff_##NAME##_nvv4l2_encoder = {                                            \
+        .p.name           = #NAME "_nvv4l2" ,                                           \
+        CODEC_LONG_NAME(NULL_IF_CONFIG_SMALL(#NAME " NVV4L2 HW encoder for Tegra")), \
+        .p.type           = AVMEDIA_TYPE_VIDEO,                                         \
+        .p.id             = ID,                                                         \
         .priv_data_size = sizeof(nvv4l2EncodeContext),                                \
         .init           = nvv4l2enc_init,                                             \
         .close          = nvv4l2enc_close,                                            \
-        .encode2        = nvv4l2enc_encode,                                           \
-        .priv_class     = &nvv4l2_##NAME##_enc_class,                                 \
-        .capabilities   = AV_CODEC_CAP_DELAY | AV_CODEC_CAP_HARDWARE,                 \
+        FF_CODEC_ENCODE_CB(nvv4l2enc_encode),                                           \
+        .p.priv_class     = &nvv4l2_##NAME##_enc_class,                                 \
+        .p.capabilities   = AV_CODEC_CAP_DELAY | AV_CODEC_CAP_HARDWARE,                 \
         .defaults       = defaults,                                                   \
-        .wrapper_name   = "nvv4l2",                                                   \
-        .pix_fmts       = (const enum AVPixelFormat[]) { AV_PIX_FMT_YUV420P,          \
+        .p.wrapper_name   = "nvv4l2",                                                   \
+        .p.pix_fmts       = (const enum AVPixelFormat[]) { AV_PIX_FMT_YUV420P,          \
                                                          AV_PIX_FMT_YUV444P,          \
                                                          AV_PIX_FMT_NV12,             \
                                                          AV_PIX_FMT_P010,             \

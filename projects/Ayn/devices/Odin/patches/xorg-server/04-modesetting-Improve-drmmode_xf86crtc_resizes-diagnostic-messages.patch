diff -Naur xorg-server-21.1.3/hw/xfree86/drivers/modesetting/drmmode_display.c xorg-server-21.1.3-2/hw/xfree86/drivers/modesetting/drmmode_display.c
--- xorg-server-21.1.3/hw/xfree86/drivers/modesetting/drmmode_display.c	2022-07-04 19:50:25.336289055 +0200
+++ xorg-server-21.1.3-2/hw/xfree86/drivers/modesetting/drmmode_display.c	2022-07-04 19:55:39.073607154 +0200
@@ -3442,13 +3442,11 @@
     int kcpp = (drmmode->kbpp + 7) / 8;
     PixmapPtr ppix = screen->GetScreenPixmap(screen);
     void *new_pixels = NULL;
+    int step = 0;
 
     if (scrn->virtualX == width && scrn->virtualY == height)
         return TRUE;
 
-    xf86DrvMsg(scrn->scrnIndex, X_INFO,
-               "Allocate new frame buffer %dx%d stride\n", width, height);
-
     old_width = scrn->virtualX;
     old_height = scrn->virtualY;
     old_pitch = drmmode_bo_get_pitch(&drmmode->front_bo);
@@ -3456,22 +3454,29 @@
     old_fb_id = drmmode->fb_id;
     drmmode->fb_id = 0;
 
+    step++;
     if (!drmmode_create_bo(drmmode, &drmmode->front_bo,
                            width, height, drmmode->kbpp))
         goto fail;
 
     pitch = drmmode_bo_get_pitch(&drmmode->front_bo);
 
+    xf86DrvMsg(scrn->scrnIndex, X_INFO,
+               "Allocated new framebuffer %dx%d pitch %d\n",
+               width, height, pitch);
+
     scrn->virtualX = width;
     scrn->virtualY = height;
     scrn->displayWidth = pitch / kcpp;
 
+    step++;
     if (!drmmode->gbm) {
         new_pixels = drmmode_map_front_bo(drmmode);
         if (!new_pixels)
             goto fail;
     }
 
+    step++;
     if (drmmode->shadow_enable) {
         uint32_t size = scrn->displayWidth * scrn->virtualY * cpp;
         new_pixels = calloc(1, size);
@@ -3491,11 +3496,13 @@
     screen->ModifyPixmapHeader(ppix, width, height, -1, -1,
                                scrn->displayWidth * cpp, new_pixels);
 
+    step++;
     if (!drmmode_glamor_handle_new_screen_pixmap(drmmode))
         goto fail;
 
     drmmode_clear_pixmap(ppix);
 
+    step++;
     for (i = 0; i < xf86_config->num_crtc; i++) {
         xf86CrtcPtr crtc = xf86_config->crtc[i];
 
@@ -3515,6 +3522,10 @@
     return TRUE;
 
  fail:
+    xf86DrvMsg(scrn->scrnIndex, X_ERROR,
+               "Failed to resize framebuffer to %dx%d (step %d)\n",
+               width, height, step);
+
     drmmode_bo_destroy(drmmode, &drmmode->front_bo);
     drmmode->front_bo = old_front;
     scrn->virtualX = old_width;
